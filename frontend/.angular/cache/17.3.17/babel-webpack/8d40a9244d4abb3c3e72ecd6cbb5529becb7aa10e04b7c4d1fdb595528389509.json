{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/treasury.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"yieldChart\"];\nfunction YieldCurveComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const point_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(point_r1.maturity);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.getYieldClass(point_r1.change));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.formatYield(point_r1.yieldValue), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.getYieldClass(point_r1.change));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.formatChange(point_r1.change), \" \");\n  }\n}\nexport class YieldCurveComponent {\n  constructor(treasuryService) {\n    this.treasuryService = treasuryService;\n    this.yieldCurveData = [];\n    this.subscription = new Subscription();\n    this.ctx = null;\n  }\n  ngOnInit() {\n    this.ctx = this.chartCanvas.nativeElement.getContext('2d');\n    // Load initial data\n    this.subscription.add(this.treasuryService.getAllBonds().subscribe(bonds => {\n      this.updateYieldCurve(bonds);\n    }));\n    // Subscribe to real-time updates\n    this.subscription.add(this.treasuryService.marketData$.subscribe(bonds => {\n      this.updateYieldCurve(bonds);\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  updateYieldCurve(bonds) {\n    this.yieldCurveData = bonds.map(bond => ({\n      maturity: bond.maturity,\n      yieldValue: bond.yield,\n      change: bond.yieldChange,\n      maturityOrder: this.getMaturityOrder(bond.maturity)\n    })).sort((a, b) => a.maturityOrder - b.maturityOrder);\n    this.drawChart();\n  }\n  getMaturityOrder(maturity) {\n    const order = {\n      '2Y': 2,\n      '5Y': 5,\n      '10Y': 10,\n      '30Y': 30\n    };\n    return order[maturity] || 0;\n  }\n  drawChart() {\n    if (!this.ctx || this.yieldCurveData.length === 0) return;\n    const canvas = this.chartCanvas.nativeElement;\n    const width = canvas.width;\n    const height = canvas.height;\n    // Clear canvas\n    this.ctx.fillStyle = '#1a1a1a';\n    this.ctx.fillRect(0, 0, width, height);\n    // Set up chart dimensions\n    const padding = 40;\n    const chartWidth = width - 2 * padding;\n    const chartHeight = height - 2 * padding;\n    // Find min/max yields for scaling\n    const yields = this.yieldCurveData.map(d => d.yieldValue);\n    const minYield = Math.min(...yields) - 0.1;\n    const maxYield = Math.max(...yields) + 0.1;\n    // Draw grid lines\n    this.ctx.strokeStyle = '#333333';\n    this.ctx.lineWidth = 1;\n    // Horizontal grid lines\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + i / 5 * chartHeight;\n      this.ctx.beginPath();\n      this.ctx.moveTo(padding, y);\n      this.ctx.lineTo(width - padding, y);\n      this.ctx.stroke();\n    }\n    // Vertical grid lines\n    for (let i = 0; i < this.yieldCurveData.length; i++) {\n      const x = padding + i / (this.yieldCurveData.length - 1) * chartWidth;\n      this.ctx.beginPath();\n      this.ctx.moveTo(x, padding);\n      this.ctx.lineTo(x, height - padding);\n      this.ctx.stroke();\n    }\n    // Draw yield curve\n    this.ctx.strokeStyle = '#00ff00';\n    this.ctx.lineWidth = 2;\n    this.ctx.beginPath();\n    this.yieldCurveData.forEach((point, index) => {\n      const x = padding + index / (this.yieldCurveData.length - 1) * chartWidth;\n      const y = height - padding - (point.yieldValue - minYield) / (maxYield - minYield) * chartHeight;\n      if (index === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n      // Draw data points\n      this.ctx.fillStyle = point.change >= 0 ? '#ff0000' : '#00ff00';\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n    });\n    this.ctx.stroke();\n    // Draw labels\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.font = '10px Roboto Mono';\n    this.ctx.textAlign = 'center';\n    // X-axis labels (maturities)\n    this.yieldCurveData.forEach((point, index) => {\n      const x = padding + index / (this.yieldCurveData.length - 1) * chartWidth;\n      this.ctx.fillText(point.maturity, x, height - 10);\n    });\n    // Y-axis labels (yields)\n    this.ctx.textAlign = 'right';\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + i / 5 * chartHeight;\n      const yieldValue = maxYield - i / 5 * (maxYield - minYield);\n      this.ctx.fillText(yieldValue.toFixed(2) + '%', padding - 10, y + 3);\n    }\n  }\n  formatYield(yieldValue) {\n    return `${yieldValue.toFixed(3)}%`;\n  }\n  formatChange(change) {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${(change * 100).toFixed(1)}bp`;\n  }\n  getYieldClass(change) {\n    if (change > 0) return 'negative';\n    if (change < 0) return 'positive';\n    return 'neutral';\n  }\n  static {\n    this.ɵfac = function YieldCurveComponent_Factory(t) {\n      return new (t || YieldCurveComponent)(i0.ɵɵdirectiveInject(i1.TreasuryService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: YieldCurveComponent,\n      selectors: [[\"app-yield-curve\"]],\n      viewQuery: function YieldCurveComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 1,\n      consts: [[\"yieldChart\", \"\"], [1, \"panel\"], [1, \"panel-header\"], [1, \"panel-content\"], [\"width\", \"400\", \"height\", \"200\"], [1, \"curve-data\"], [\"class\", \"data-point\", 4, \"ngFor\", \"ngForOf\"], [1, \"data-point\"], [1, \"maturity\"], [1, \"yield\"], [1, \"change\"]],\n      template: function YieldCurveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵtext(2, \" US TREASURY YIELD CURVE \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3);\n          i0.ɵɵelement(4, \"canvas\", 4, 0);\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵtemplate(7, YieldCurveComponent_div_7_Template, 7, 7, \"div\", 6);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.yieldCurveData);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf],\n      styles: [\"canvas[_ngcontent-%COMP%] {\\n  background-color: var(--bg-secondary);\\n  border: 1px solid var(--border-color);\\n  width: 100%;\\n  height: 200px;\\n}\\n\\n.curve-data[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  gap: 10px;\\n}\\n\\n.data-point[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 5px;\\n  border: 1px solid var(--border-color);\\n  background-color: var(--bg-secondary);\\n}\\n\\n.maturity[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  color: var(--text-accent);\\n  font-size: 11px;\\n}\\n\\n.yield[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  font-weight: bold;\\n  margin: 2px 0;\\n}\\n\\n.change[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlpZWxkLWN1cnZlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNFLHFDQUFBO0VBQ0EscUNBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtBQUFOOztBQUdJO0VBQ0UsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EscUNBQUE7RUFDQSxTQUFBO0FBQU47O0FBR0k7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxxQ0FBQTtFQUNBLHFDQUFBO0FBQU47O0FBR0k7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZUFBQTtBQUFOOztBQUdJO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtBQUFOOztBQUdJO0VBQ0UsZUFBQTtBQUFOIiwiZmlsZSI6InlpZWxkLWN1cnZlLmNvbXBvbmVudC50cyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIGNhbnZhcyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZy1zZWNvbmRhcnkpO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICB9XG4gICAgXG4gICAgLmN1cnZlLWRhdGEge1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuICAgICAgZ2FwOiAxMHB4O1xuICAgIH1cbiAgICBcbiAgICAuZGF0YS1wb2ludCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXItY29sb3IpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmctc2Vjb25kYXJ5KTtcbiAgICB9XG4gICAgXG4gICAgLm1hdHVyaXR5IHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6IHZhcigtLXRleHQtYWNjZW50KTtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICB9XG4gICAgXG4gICAgLnlpZWxkIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgbWFyZ2luOiAycHggMDtcbiAgICB9XG4gICAgXG4gICAgLmNoYW5nZSB7XG4gICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgfVxuICAiXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy95aWVsZC1jdXJ2ZS95aWVsZC1jdXJ2ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxxQ0FBQTtFQUNBLHFDQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHFDQUFBO0VBQ0EsU0FBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EscUNBQUE7RUFDQSxxQ0FBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7QUFBTjs7QUFHSTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7QUFBTjs7QUFHSTtFQUNFLGVBQUE7QUFBTjtBQUNBLG9vREFBb29EIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgY2FudmFzIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnLXNlY29uZGFyeSk7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXItY29sb3IpO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIH1cbiAgICBcbiAgICAuY3VydmUtZGF0YSB7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgICBnYXA6IDEwcHg7XG4gICAgfVxuICAgIFxuICAgIC5kYXRhLXBvaW50IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZy1zZWNvbmRhcnkpO1xuICAgIH1cbiAgICBcbiAgICAubWF0dXJpdHkge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBjb2xvcjogdmFyKC0tdGV4dC1hY2NlbnQpO1xuICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgIH1cbiAgICBcbiAgICAueWllbGQge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW46IDJweCAwO1xuICAgIH1cbiAgICBcbiAgICAuY2hhbmdlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Subscription","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","point_r1","maturity","ɵɵclassMap","ctx_r1","getYieldClass","change","ɵɵtextInterpolate1","formatYield","yieldValue","formatChange","YieldCurveComponent","constructor","treasuryService","yieldCurveData","subscription","ctx","ngOnInit","chartCanvas","nativeElement","getContext","add","getAllBonds","subscribe","bonds","updateYieldCurve","marketData$","ngOnDestroy","unsubscribe","map","bond","yield","yieldChange","maturityOrder","getMaturityOrder","sort","a","b","drawChart","order","length","canvas","width","height","fillStyle","fillRect","padding","chartWidth","chartHeight","yields","d","minYield","Math","min","maxYield","max","strokeStyle","lineWidth","i","y","beginPath","moveTo","lineTo","stroke","x","forEach","point","index","arc","PI","fill","font","textAlign","fillText","toFixed","sign","ɵɵdirectiveInject","i1","TreasuryService","selectors","viewQuery","YieldCurveComponent_Query","rf","ɵɵelement","ɵɵtemplate","YieldCurveComponent_div_7_Template","ɵɵproperty","i2","NgForOf","styles"],"sources":["C:\\MAAK-TreasuryDashboard\\frontend\\src\\app\\components\\yield-curve\\yield-curve.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreasuryService } from '../../services/treasury.service';\nimport { TreasuryBond } from '../../models/treasury-bond.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-yield-curve',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"panel\">\n      <div class=\"panel-header\">\n        US TREASURY YIELD CURVE\n      </div>\n      <div class=\"panel-content\">\n        <canvas #yieldChart width=\"400\" height=\"200\"></canvas>\n        <div class=\"curve-data\">\n          <div *ngFor=\"let point of yieldCurveData\" class=\"data-point\">\n            <span class=\"maturity\">{{ point.maturity }}</span>\n            <span class=\"yield\" [class]=\"getYieldClass(point.change)\">\n              {{ formatYield(point.yieldValue) }}\n            </span>\n            <span class=\"change\" [class]=\"getYieldClass(point.change)\">\n              {{ formatChange(point.change) }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    canvas {\n      background-color: var(--bg-secondary);\n      border: 1px solid var(--border-color);\n      width: 100%;\n      height: 200px;\n    }\n    \n    .curve-data {\n      margin-top: 10px;\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 10px;\n    }\n    \n    .data-point {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 5px;\n      border: 1px solid var(--border-color);\n      background-color: var(--bg-secondary);\n    }\n    \n    .maturity {\n      font-weight: bold;\n      color: var(--text-accent);\n      font-size: 11px;\n    }\n    \n    .yield {\n      font-size: 14px;\n      font-weight: bold;\n      margin: 2px 0;\n    }\n    \n    .change {\n      font-size: 10px;\n    }\n  `]\n})\nexport class YieldCurveComponent implements OnInit, OnDestroy {\n  @ViewChild('yieldChart', { static: true }) chartCanvas!: ElementRef<HTMLCanvasElement>;\n  \n  yieldCurveData: any[] = [];\n  private subscription: Subscription = new Subscription();\n  private ctx: CanvasRenderingContext2D | null = null;\n\n  constructor(private treasuryService: TreasuryService) {}\n\n  ngOnInit(): void {\n    this.ctx = this.chartCanvas.nativeElement.getContext('2d');\n    \n    // Load initial data\n    this.subscription.add(\n      this.treasuryService.getAllBonds().subscribe(bonds => {\n        this.updateYieldCurve(bonds);\n      })\n    );\n\n    // Subscribe to real-time updates\n    this.subscription.add(\n      this.treasuryService.marketData$.subscribe(bonds => {\n        this.updateYieldCurve(bonds);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private updateYieldCurve(bonds: TreasuryBond[]): void {\n    this.yieldCurveData = bonds.map(bond => ({\n      maturity: bond.maturity,\n      yieldValue: bond.yield,\n      change: bond.yieldChange,\n      maturityOrder: this.getMaturityOrder(bond.maturity)\n    })).sort((a, b) => a.maturityOrder - b.maturityOrder);\n\n    this.drawChart();\n  }\n\n  private getMaturityOrder(maturity: string): number {\n    const order: { [key: string]: number } = {\n      '2Y': 2,\n      '5Y': 5,\n      '10Y': 10,\n      '30Y': 30\n    };\n    return order[maturity] || 0;\n  }\n\n  private drawChart(): void {\n    if (!this.ctx || this.yieldCurveData.length === 0) return;\n\n    const canvas = this.chartCanvas.nativeElement;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    this.ctx!.fillStyle = '#1a1a1a';\n    this.ctx!.fillRect(0, 0, width, height);\n\n    // Set up chart dimensions\n    const padding = 40;\n    const chartWidth = width - 2 * padding;\n    const chartHeight = height - 2 * padding;\n\n    // Find min/max yields for scaling\n    const yields = this.yieldCurveData.map(d => d.yieldValue);\n    const minYield = Math.min(...yields) - 0.1;\n    const maxYield = Math.max(...yields) + 0.1;\n\n    // Draw grid lines\n    this.ctx!.strokeStyle = '#333333';\n    this.ctx!.lineWidth = 1;\n    \n    // Horizontal grid lines\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (i / 5) * chartHeight;\n      this.ctx!.beginPath();\n      this.ctx!.moveTo(padding, y);\n      this.ctx!.lineTo(width - padding, y);\n      this.ctx!.stroke();\n    }\n\n    // Vertical grid lines\n    for (let i = 0; i < this.yieldCurveData.length; i++) {\n      const x = padding + (i / (this.yieldCurveData.length - 1)) * chartWidth;\n      this.ctx!.beginPath();\n      this.ctx!.moveTo(x, padding);\n      this.ctx!.lineTo(x, height - padding);\n      this.ctx!.stroke();\n    }\n\n    // Draw yield curve\n    this.ctx!.strokeStyle = '#00ff00';\n    this.ctx!.lineWidth = 2;\n    this.ctx!.beginPath();\n\n    this.yieldCurveData.forEach((point, index) => {\n      const x = padding + (index / (this.yieldCurveData.length - 1)) * chartWidth;\n      const y = height - padding - ((point.yieldValue - minYield) / (maxYield - minYield)) * chartHeight;\n\n      if (index === 0) {\n        this.ctx!.moveTo(x, y);\n      } else {\n        this.ctx!.lineTo(x, y);\n      }\n\n      // Draw data points\n      this.ctx!.fillStyle = point.change >= 0 ? '#ff0000' : '#00ff00';\n      this.ctx!.beginPath();\n      this.ctx!.arc(x, y, 4, 0, 2 * Math.PI);\n      this.ctx!.fill();\n    });\n\n    this.ctx!.stroke();\n\n    // Draw labels\n    this.ctx!.fillStyle = '#ffffff';\n    this.ctx!.font = '10px Roboto Mono';\n    this.ctx!.textAlign = 'center';\n\n    // X-axis labels (maturities)\n    this.yieldCurveData.forEach((point, index) => {\n      const x = padding + (index / (this.yieldCurveData.length - 1)) * chartWidth;\n      this.ctx!.fillText(point.maturity, x, height - 10);\n    });\n\n    // Y-axis labels (yields)\n    this.ctx!.textAlign = 'right';\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (i / 5) * chartHeight;\n      const yieldValue = maxYield - (i / 5) * (maxYield - minYield);\n      this.ctx!.fillText(yieldValue.toFixed(2) + '%', padding - 10, y + 3);\n    }\n  }\n\n  formatYield(yieldValue: number): string {\n    return `${yieldValue.toFixed(3)}%`;\n  }\n\n  formatChange(change: number): string {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${(change * 100).toFixed(1)}bp`;\n  }\n\n  getYieldClass(change: number): string {\n    if (change > 0) return 'negative';\n    if (change < 0) return 'positive';\n    return 'neutral';\n  }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,YAAY,QAAQ,MAAM;;;;;;;IAevBC,EADF,CAAAC,cAAA,aAA6D,cACpC;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAClDH,EAAA,CAAAC,cAAA,cAA0D;IACxDD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAO;IACPH,EAAA,CAAAC,cAAA,eAA2D;IACzDD,EAAA,CAAAE,MAAA,GACF;IACFF,EADE,CAAAG,YAAA,EAAO,EACH;;;;;IAPmBH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,QAAA,CAAoB;IACvBP,EAAA,CAAAI,SAAA,EAAqC;IAArCJ,EAAA,CAAAQ,UAAA,CAAAC,MAAA,CAAAC,aAAA,CAAAJ,QAAA,CAAAK,MAAA,EAAqC;IACvDX,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAY,kBAAA,MAAAH,MAAA,CAAAI,WAAA,CAAAP,QAAA,CAAAQ,UAAA,OACF;IACqBd,EAAA,CAAAI,SAAA,EAAqC;IAArCJ,EAAA,CAAAQ,UAAA,CAAAC,MAAA,CAAAC,aAAA,CAAAJ,QAAA,CAAAK,MAAA,EAAqC;IACxDX,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAY,kBAAA,MAAAH,MAAA,CAAAM,YAAA,CAAAT,QAAA,CAAAK,MAAA,OACF;;;AA+CZ,OAAM,MAAOK,mBAAmB;EAO9BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAJnC,KAAAC,cAAc,GAAU,EAAE;IAClB,KAAAC,YAAY,GAAiB,IAAIrB,YAAY,EAAE;IAC/C,KAAAsB,GAAG,GAAoC,IAAI;EAEI;EAEvDC,QAAQA,CAAA;IACN,IAAI,CAACD,GAAG,GAAG,IAAI,CAACE,WAAW,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IAE1D;IACA,IAAI,CAACL,YAAY,CAACM,GAAG,CACnB,IAAI,CAACR,eAAe,CAACS,WAAW,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACnD,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAAC;IAC9B,CAAC,CAAC,CACH;IAED;IACA,IAAI,CAACT,YAAY,CAACM,GAAG,CACnB,IAAI,CAACR,eAAe,CAACa,WAAW,CAACH,SAAS,CAACC,KAAK,IAAG;MACjD,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAEAG,WAAWA,CAAA;IACT,IAAI,CAACZ,YAAY,CAACa,WAAW,EAAE;EACjC;EAEQH,gBAAgBA,CAACD,KAAqB;IAC5C,IAAI,CAACV,cAAc,GAAGU,KAAK,CAACK,GAAG,CAACC,IAAI,KAAK;MACvC5B,QAAQ,EAAE4B,IAAI,CAAC5B,QAAQ;MACvBO,UAAU,EAAEqB,IAAI,CAACC,KAAK;MACtBzB,MAAM,EAAEwB,IAAI,CAACE,WAAW;MACxBC,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAACJ,IAAI,CAAC5B,QAAQ;KACnD,CAAC,CAAC,CAACiC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,aAAa,GAAGI,CAAC,CAACJ,aAAa,CAAC;IAErD,IAAI,CAACK,SAAS,EAAE;EAClB;EAEQJ,gBAAgBA,CAAChC,QAAgB;IACvC,MAAMqC,KAAK,GAA8B;MACvC,IAAI,EAAE,CAAC;MACP,IAAI,EAAE,CAAC;MACP,KAAK,EAAE,EAAE;MACT,KAAK,EAAE;KACR;IACD,OAAOA,KAAK,CAACrC,QAAQ,CAAC,IAAI,CAAC;EAC7B;EAEQoC,SAASA,CAAA;IACf,IAAI,CAAC,IAAI,CAACtB,GAAG,IAAI,IAAI,CAACF,cAAc,CAAC0B,MAAM,KAAK,CAAC,EAAE;IAEnD,MAAMC,MAAM,GAAG,IAAI,CAACvB,WAAW,CAACC,aAAa;IAC7C,MAAMuB,KAAK,GAAGD,MAAM,CAACC,KAAK;IAC1B,MAAMC,MAAM,GAAGF,MAAM,CAACE,MAAM;IAE5B;IACA,IAAI,CAAC3B,GAAI,CAAC4B,SAAS,GAAG,SAAS;IAC/B,IAAI,CAAC5B,GAAI,CAAC6B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEH,KAAK,EAAEC,MAAM,CAAC;IAEvC;IACA,MAAMG,OAAO,GAAG,EAAE;IAClB,MAAMC,UAAU,GAAGL,KAAK,GAAG,CAAC,GAAGI,OAAO;IACtC,MAAME,WAAW,GAAGL,MAAM,GAAG,CAAC,GAAGG,OAAO;IAExC;IACA,MAAMG,MAAM,GAAG,IAAI,CAACnC,cAAc,CAACe,GAAG,CAACqB,CAAC,IAAIA,CAAC,CAACzC,UAAU,CAAC;IACzD,MAAM0C,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,MAAM,CAAC,GAAG,GAAG;IAC1C,MAAMK,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGN,MAAM,CAAC,GAAG,GAAG;IAE1C;IACA,IAAI,CAACjC,GAAI,CAACwC,WAAW,GAAG,SAAS;IACjC,IAAI,CAACxC,GAAI,CAACyC,SAAS,GAAG,CAAC;IAEvB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,CAAC,GAAGb,OAAO,GAAIY,CAAC,GAAG,CAAC,GAAIV,WAAW;MACzC,IAAI,CAAChC,GAAI,CAAC4C,SAAS,EAAE;MACrB,IAAI,CAAC5C,GAAI,CAAC6C,MAAM,CAACf,OAAO,EAAEa,CAAC,CAAC;MAC5B,IAAI,CAAC3C,GAAI,CAAC8C,MAAM,CAACpB,KAAK,GAAGI,OAAO,EAAEa,CAAC,CAAC;MACpC,IAAI,CAAC3C,GAAI,CAAC+C,MAAM,EAAE;;IAGpB;IACA,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC5C,cAAc,CAAC0B,MAAM,EAAEkB,CAAC,EAAE,EAAE;MACnD,MAAMM,CAAC,GAAGlB,OAAO,GAAIY,CAAC,IAAI,IAAI,CAAC5C,cAAc,CAAC0B,MAAM,GAAG,CAAC,CAAC,GAAIO,UAAU;MACvE,IAAI,CAAC/B,GAAI,CAAC4C,SAAS,EAAE;MACrB,IAAI,CAAC5C,GAAI,CAAC6C,MAAM,CAACG,CAAC,EAAElB,OAAO,CAAC;MAC5B,IAAI,CAAC9B,GAAI,CAAC8C,MAAM,CAACE,CAAC,EAAErB,MAAM,GAAGG,OAAO,CAAC;MACrC,IAAI,CAAC9B,GAAI,CAAC+C,MAAM,EAAE;;IAGpB;IACA,IAAI,CAAC/C,GAAI,CAACwC,WAAW,GAAG,SAAS;IACjC,IAAI,CAACxC,GAAI,CAACyC,SAAS,GAAG,CAAC;IACvB,IAAI,CAACzC,GAAI,CAAC4C,SAAS,EAAE;IAErB,IAAI,CAAC9C,cAAc,CAACmD,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;MAC3C,MAAMH,CAAC,GAAGlB,OAAO,GAAIqB,KAAK,IAAI,IAAI,CAACrD,cAAc,CAAC0B,MAAM,GAAG,CAAC,CAAC,GAAIO,UAAU;MAC3E,MAAMY,CAAC,GAAGhB,MAAM,GAAGG,OAAO,GAAI,CAACoB,KAAK,CAACzD,UAAU,GAAG0C,QAAQ,KAAKG,QAAQ,GAAGH,QAAQ,CAAC,GAAIH,WAAW;MAElG,IAAImB,KAAK,KAAK,CAAC,EAAE;QACf,IAAI,CAACnD,GAAI,CAAC6C,MAAM,CAACG,CAAC,EAAEL,CAAC,CAAC;OACvB,MAAM;QACL,IAAI,CAAC3C,GAAI,CAAC8C,MAAM,CAACE,CAAC,EAAEL,CAAC,CAAC;;MAGxB;MACA,IAAI,CAAC3C,GAAI,CAAC4B,SAAS,GAAGsB,KAAK,CAAC5D,MAAM,IAAI,CAAC,GAAG,SAAS,GAAG,SAAS;MAC/D,IAAI,CAACU,GAAI,CAAC4C,SAAS,EAAE;MACrB,IAAI,CAAC5C,GAAI,CAACoD,GAAG,CAACJ,CAAC,EAAEL,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGP,IAAI,CAACiB,EAAE,CAAC;MACtC,IAAI,CAACrD,GAAI,CAACsD,IAAI,EAAE;IAClB,CAAC,CAAC;IAEF,IAAI,CAACtD,GAAI,CAAC+C,MAAM,EAAE;IAElB;IACA,IAAI,CAAC/C,GAAI,CAAC4B,SAAS,GAAG,SAAS;IAC/B,IAAI,CAAC5B,GAAI,CAACuD,IAAI,GAAG,kBAAkB;IACnC,IAAI,CAACvD,GAAI,CAACwD,SAAS,GAAG,QAAQ;IAE9B;IACA,IAAI,CAAC1D,cAAc,CAACmD,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;MAC3C,MAAMH,CAAC,GAAGlB,OAAO,GAAIqB,KAAK,IAAI,IAAI,CAACrD,cAAc,CAAC0B,MAAM,GAAG,CAAC,CAAC,GAAIO,UAAU;MAC3E,IAAI,CAAC/B,GAAI,CAACyD,QAAQ,CAACP,KAAK,CAAChE,QAAQ,EAAE8D,CAAC,EAAErB,MAAM,GAAG,EAAE,CAAC;IACpD,CAAC,CAAC;IAEF;IACA,IAAI,CAAC3B,GAAI,CAACwD,SAAS,GAAG,OAAO;IAC7B,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,CAAC,GAAGb,OAAO,GAAIY,CAAC,GAAG,CAAC,GAAIV,WAAW;MACzC,MAAMvC,UAAU,GAAG6C,QAAQ,GAAII,CAAC,GAAG,CAAC,IAAKJ,QAAQ,GAAGH,QAAQ,CAAC;MAC7D,IAAI,CAACnC,GAAI,CAACyD,QAAQ,CAAChE,UAAU,CAACiE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE5B,OAAO,GAAG,EAAE,EAAEa,CAAC,GAAG,CAAC,CAAC;;EAExE;EAEAnD,WAAWA,CAACC,UAAkB;IAC5B,OAAO,GAAGA,UAAU,CAACiE,OAAO,CAAC,CAAC,CAAC,GAAG;EACpC;EAEAhE,YAAYA,CAACJ,MAAc;IACzB,MAAMqE,IAAI,GAAGrE,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;IACnC,OAAO,GAAGqE,IAAI,GAAG,CAACrE,MAAM,GAAG,GAAG,EAAEoE,OAAO,CAAC,CAAC,CAAC,IAAI;EAChD;EAEArE,aAAaA,CAACC,MAAc;IAC1B,IAAIA,MAAM,GAAG,CAAC,EAAE,OAAO,UAAU;IACjC,IAAIA,MAAM,GAAG,CAAC,EAAE,OAAO,UAAU;IACjC,OAAO,SAAS;EAClB;;;uBAxJWK,mBAAmB,EAAAhB,EAAA,CAAAiF,iBAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;YAAnBnE,mBAAmB;MAAAoE,SAAA;MAAAC,SAAA,WAAAC,0BAAAC,EAAA,EAAAlE,GAAA;QAAA,IAAAkE,EAAA;;;;;;;;;;;;;;;UA5D1BvF,EADF,CAAAC,cAAA,aAAmB,aACS;UACxBD,EAAA,CAAAE,MAAA,gCACF;UAAAF,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAC,cAAA,aAA2B;UACzBD,EAAA,CAAAwF,SAAA,mBAAsD;UACtDxF,EAAA,CAAAC,cAAA,aAAwB;UACtBD,EAAA,CAAAyF,UAAA,IAAAC,kCAAA,iBAA6D;UAWnE1F,EAFI,CAAAG,YAAA,EAAM,EACF,EACF;;;UAXuBH,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAA2F,UAAA,YAAAtE,GAAA,CAAAF,cAAA,CAAiB;;;qBATtCrB,YAAY,EAAA8F,EAAA,CAAAC,OAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}