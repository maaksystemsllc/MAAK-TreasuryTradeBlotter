{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/treasury.service\";\nimport * as i2 from \"@angular/common\";\nfunction MarketGridComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 9);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 10);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 11);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 12);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\", 13);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const bond_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"blink\", ctx_r1.isUpdated(bond_r1.cusip));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bond_r1.maturity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bond_r1.cusip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatPercent(bond_r1.coupon));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatPrice(bond_r1.bidPrice));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatPrice(bond_r1.askPrice));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatPrice(bond_r1.price));\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.getPriceChangeClass(bond_r1.priceChange));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.formatPriceChange(bond_r1.priceChange), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatPercent(bond_r1.yield));\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.getYieldChangeClass(bond_r1.yieldChange));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.formatYieldChange(bond_r1.yieldChange), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatVolume(bond_r1.volume));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatTime(bond_r1.lastUpdated));\n  }\n}\nexport class MarketGridComponent {\n  constructor(treasuryService) {\n    this.treasuryService = treasuryService;\n    this.bonds = [];\n    this.subscription = new Subscription();\n    this.updatedBonds = new Set();\n  }\n  ngOnInit() {\n    // Load initial data\n    this.subscription.add(this.treasuryService.getAllBonds().subscribe({\n      next: bonds => {\n        console.log('Market Grid - Received bonds:', bonds);\n        this.bonds = bonds;\n      },\n      error: error => {\n        console.error('Market Grid - Error loading bonds:', error);\n      }\n    }));\n    // Subscribe to real-time updates\n    this.subscription.add(this.treasuryService.marketData$.subscribe({\n      next: bonds => {\n        console.log('Market Grid - WebSocket update:', bonds);\n        this.updateBonds(bonds);\n      },\n      error: error => {\n        console.error('Market Grid - WebSocket error:', error);\n      }\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  updateBonds(newBonds) {\n    newBonds.forEach(newBond => {\n      const existingIndex = this.bonds.findIndex(b => b.cusip === newBond.cusip);\n      if (existingIndex >= 0) {\n        this.bonds[existingIndex] = newBond;\n        this.updatedBonds.add(newBond.cusip);\n        // Remove blink effect after animation\n        setTimeout(() => {\n          this.updatedBonds.delete(newBond.cusip);\n        }, 500);\n      }\n    });\n  }\n  trackByBond(index, bond) {\n    return bond.cusip;\n  }\n  isUpdated(cusip) {\n    return this.updatedBonds.has(cusip);\n  }\n  formatPrice(price) {\n    const wholePart = Math.floor(price);\n    const fractionalPart = price - wholePart;\n    const thirtySeconds = Math.round(fractionalPart * 32);\n    return `${wholePart}-${thirtySeconds.toString().padStart(2, '0')}`;\n  }\n  formatPercent(value) {\n    return `${value.toFixed(3)}%`;\n  }\n  formatPriceChange(change) {\n    const sign = change >= 0 ? '+' : '';\n    const wholePart = Math.floor(Math.abs(change));\n    const fractionalPart = Math.abs(change) - wholePart;\n    const thirtySeconds = Math.round(fractionalPart * 32);\n    return `${sign}${change >= 0 ? '' : '-'}${wholePart}-${thirtySeconds.toString().padStart(2, '0')}`;\n  }\n  formatYieldChange(change) {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${(change * 100).toFixed(1)}bp`;\n  }\n  formatVolume(volume) {\n    if (volume >= 1000000) {\n      return `${(volume / 1000000).toFixed(1)}M`;\n    } else if (volume >= 1000) {\n      return `${(volume / 1000).toFixed(0)}K`;\n    }\n    return volume.toString();\n  }\n  formatTime(timestamp) {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  }\n  getPriceChangeClass(change) {\n    if (change > 0) return 'positive';\n    if (change < 0) return 'negative';\n    return 'neutral';\n  }\n  getYieldChangeClass(change) {\n    if (change > 0) return 'negative'; // Higher yield is negative for bond prices\n    if (change < 0) return 'positive'; // Lower yield is positive for bond prices\n    return 'neutral';\n  }\n  static {\n    this.ɵfac = function MarketGridComponent_Factory(t) {\n      return new (t || MarketGridComponent)(i0.ɵɵdirectiveInject(i1.TreasuryService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MarketGridComponent,\n      selectors: [[\"app-market-grid\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 31,\n      vars: 2,\n      consts: [[1, \"panel\"], [1, \"panel-header\"], [1, \"panel-content\"], [1, \"data-grid\"], [3, \"blink\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"maturity\"], [1, \"cusip\"], [1, \"coupon\"], [1, \"bid\"], [1, \"ask\"], [1, \"price\"], [1, \"yield\"], [1, \"volume\"], [1, \"time\"]],\n      template: function MarketGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \" US TREASURY ON-THE-RUN ISSUES \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"MATURITY\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"CUSIP\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"COUPON\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"BID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\");\n          i0.ɵɵtext(16, \"ASK\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"LAST\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\");\n          i0.ɵɵtext(20, \"CHG\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"th\");\n          i0.ɵɵtext(22, \"YIELD\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"th\");\n          i0.ɵɵtext(24, \"YLD CHG\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"th\");\n          i0.ɵɵtext(26, \"VOLUME\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"th\");\n          i0.ɵɵtext(28, \"TIME\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(29, \"tbody\");\n          i0.ɵɵtemplate(30, MarketGridComponent_tr_30_Template, 23, 17, \"tr\", 4);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(30);\n          i0.ɵɵproperty(\"ngForOf\", ctx.bonds)(\"ngForTrackBy\", ctx.trackByBond);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf],\n      styles: [\".maturity[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  color: var(--text-accent);\\n}\\n\\n.cusip[_ngcontent-%COMP%] {\\n  font-family: monospace;\\n  font-size: 10px;\\n}\\n\\n.price[_ngcontent-%COMP%], .bid[_ngcontent-%COMP%], .ask[_ngcontent-%COMP%] {\\n  text-align: right;\\n  font-weight: bold;\\n}\\n\\n.yield[_ngcontent-%COMP%] {\\n  text-align: right;\\n  color: var(--text-secondary);\\n}\\n\\n.volume[_ngcontent-%COMP%] {\\n  text-align: right;\\n  color: var(--text-primary);\\n}\\n\\n.time[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n  color: #888;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcmtldC1ncmlkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7QUFBTjs7QUFHSTtFQUNFLHNCQUFBO0VBQ0EsZUFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSxpQkFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSw0QkFBQTtBQUFOOztBQUdJO0VBQ0UsaUJBQUE7RUFDQSwwQkFBQTtBQUFOOztBQUdJO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUFBTiIsImZpbGUiOiJtYXJrZXQtZ3JpZC5jb21wb25lbnQudHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAubWF0dXJpdHkge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBjb2xvcjogdmFyKC0tdGV4dC1hY2NlbnQpO1xuICAgIH1cbiAgICBcbiAgICAuY3VzaXAge1xuICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gICAgXG4gICAgLnByaWNlLCAuYmlkLCAuYXNrIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICAgIFxuICAgIC55aWVsZCB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LXNlY29uZGFyeSk7XG4gICAgfVxuICAgIFxuICAgIC52b2x1bWUge1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBjb2xvcjogdmFyKC0tdGV4dC1wcmltYXJ5KTtcbiAgICB9XG4gICAgXG4gICAgLnRpbWUge1xuICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgY29sb3I6ICM4ODg7XG4gICAgfVxuICAiXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYXJrZXQtZ3JpZC9tYXJrZXQtZ3JpZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0FBQU47O0FBR0k7RUFDRSxzQkFBQTtFQUNBLGVBQUE7QUFBTjs7QUFHSTtFQUNFLGlCQUFBO0VBQ0EsaUJBQUE7QUFBTjs7QUFHSTtFQUNFLGlCQUFBO0VBQ0EsNEJBQUE7QUFBTjs7QUFHSTtFQUNFLGlCQUFBO0VBQ0EsMEJBQUE7QUFBTjs7QUFHSTtFQUNFLGVBQUE7RUFDQSxXQUFBO0FBQU47QUFDQSxncENBQWdwQyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5tYXR1cml0eSB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LWFjY2VudCk7XG4gICAgfVxuICAgIFxuICAgIC5jdXNpcCB7XG4gICAgICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgIH1cbiAgICBcbiAgICAucHJpY2UsIC5iaWQsIC5hc2sge1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgXG4gICAgLnlpZWxkIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgY29sb3I6IHZhcigtLXRleHQtc2Vjb25kYXJ5KTtcbiAgICB9XG4gICAgXG4gICAgLnZvbHVtZSB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LXByaW1hcnkpO1xuICAgIH1cbiAgICBcbiAgICAudGltZSB7XG4gICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICBjb2xvcjogIzg4ODtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Subscription","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r1","isUpdated","bond_r1","cusip","ɵɵadvance","ɵɵtextInterpolate","maturity","formatPercent","coupon","formatPrice","bidPrice","askPrice","price","ɵɵclassMap","getPriceChangeClass","priceChange","ɵɵtextInterpolate1","formatPriceChange","yield","getYieldChangeClass","yieldChange","formatYieldChange","formatVolume","volume","formatTime","lastUpdated","MarketGridComponent","constructor","treasuryService","bonds","subscription","updatedBonds","Set","ngOnInit","add","getAllBonds","subscribe","next","console","log","error","marketData$","updateBonds","ngOnDestroy","unsubscribe","newBonds","forEach","newBond","existingIndex","findIndex","b","setTimeout","delete","trackByBond","index","bond","has","wholePart","Math","floor","fractionalPart","thirtySeconds","round","toString","padStart","value","toFixed","change","sign","abs","timestamp","date","Date","toLocaleTimeString","hour12","hour","minute","second","ɵɵdirectiveInject","i1","TreasuryService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MarketGridComponent_Template","rf","ctx","ɵɵtemplate","MarketGridComponent_tr_30_Template","ɵɵproperty","i2","NgForOf","styles"],"sources":["C:\\MAAK-TreasuryDashboard\\frontend\\src\\app\\components\\market-grid\\market-grid.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreasuryService } from '../../services/treasury.service';\nimport { TreasuryBond } from '../../models/treasury-bond.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-market-grid',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"panel\">\n      <div class=\"panel-header\">\n        US TREASURY ON-THE-RUN ISSUES\n      </div>\n      <div class=\"panel-content\">\n        <table class=\"data-grid\">\n          <thead>\n            <tr>\n              <th>MATURITY</th>\n              <th>CUSIP</th>\n              <th>COUPON</th>\n              <th>BID</th>\n              <th>ASK</th>\n              <th>LAST</th>\n              <th>CHG</th>\n              <th>YIELD</th>\n              <th>YLD CHG</th>\n              <th>VOLUME</th>\n              <th>TIME</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let bond of bonds; trackBy: trackByBond\" \n                [class.blink]=\"isUpdated(bond.cusip)\">\n              <td class=\"maturity\">{{ bond.maturity }}</td>\n              <td class=\"cusip\">{{ bond.cusip }}</td>\n              <td class=\"coupon\">{{ formatPercent(bond.coupon) }}</td>\n              <td class=\"bid\">{{ formatPrice(bond.bidPrice) }}</td>\n              <td class=\"ask\">{{ formatPrice(bond.askPrice) }}</td>\n              <td class=\"price\">{{ formatPrice(bond.price) }}</td>\n              <td [class]=\"getPriceChangeClass(bond.priceChange)\">\n                {{ formatPriceChange(bond.priceChange) }}\n              </td>\n              <td class=\"yield\">{{ formatPercent(bond.yield) }}</td>\n              <td [class]=\"getYieldChangeClass(bond.yieldChange)\">\n                {{ formatYieldChange(bond.yieldChange) }}\n              </td>\n              <td class=\"volume\">{{ formatVolume(bond.volume) }}</td>\n              <td class=\"time\">{{ formatTime(bond.lastUpdated) }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .maturity {\n      font-weight: bold;\n      color: var(--text-accent);\n    }\n    \n    .cusip {\n      font-family: monospace;\n      font-size: 10px;\n    }\n    \n    .price, .bid, .ask {\n      text-align: right;\n      font-weight: bold;\n    }\n    \n    .yield {\n      text-align: right;\n      color: var(--text-secondary);\n    }\n    \n    .volume {\n      text-align: right;\n      color: var(--text-primary);\n    }\n    \n    .time {\n      font-size: 10px;\n      color: #888;\n    }\n  `]\n})\nexport class MarketGridComponent implements OnInit, OnDestroy {\n  bonds: TreasuryBond[] = [];\n  private subscription: Subscription = new Subscription();\n  private updatedBonds = new Set<string>();\n\n  constructor(private treasuryService: TreasuryService) {}\n\n  ngOnInit(): void {\n    // Load initial data\n    this.subscription.add(\n      this.treasuryService.getAllBonds().subscribe({\n        next: (bonds) => {\n          console.log('Market Grid - Received bonds:', bonds);\n          this.bonds = bonds;\n        },\n        error: (error) => {\n          console.error('Market Grid - Error loading bonds:', error);\n        }\n      })\n    );\n\n    // Subscribe to real-time updates\n    this.subscription.add(\n      this.treasuryService.marketData$.subscribe({\n        next: (bonds) => {\n          console.log('Market Grid - WebSocket update:', bonds);\n          this.updateBonds(bonds);\n        },\n        error: (error) => {\n          console.error('Market Grid - WebSocket error:', error);\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private updateBonds(newBonds: TreasuryBond[]): void {\n    newBonds.forEach((newBond: TreasuryBond) => {\n      const existingIndex = this.bonds.findIndex(b => b.cusip === newBond.cusip);\n      if (existingIndex >= 0) {\n        this.bonds[existingIndex] = newBond;\n        this.updatedBonds.add(newBond.cusip);\n        \n        // Remove blink effect after animation\n        setTimeout(() => {\n          this.updatedBonds.delete(newBond.cusip);\n        }, 500);\n      }\n    });\n  }\n\n  trackByBond(index: number, bond: TreasuryBond): string {\n    return bond.cusip;\n  }\n\n  isUpdated(cusip: string): boolean {\n    return this.updatedBonds.has(cusip);\n  }\n\n  formatPrice(price: number): string {\n    const wholePart = Math.floor(price);\n    const fractionalPart = price - wholePart;\n    const thirtySeconds = Math.round(fractionalPart * 32);\n    return `${wholePart}-${thirtySeconds.toString().padStart(2, '0')}`;\n  }\n\n  formatPercent(value: number): string {\n    return `${value.toFixed(3)}%`;\n  }\n\n  formatPriceChange(change: number): string {\n    const sign = change >= 0 ? '+' : '';\n    const wholePart = Math.floor(Math.abs(change));\n    const fractionalPart = Math.abs(change) - wholePart;\n    const thirtySeconds = Math.round(fractionalPart * 32);\n    return `${sign}${change >= 0 ? '' : '-'}${wholePart}-${thirtySeconds.toString().padStart(2, '0')}`;\n  }\n\n  formatYieldChange(change: number): string {\n    const sign = change >= 0 ? '+' : '';\n    return `${sign}${(change * 100).toFixed(1)}bp`;\n  }\n\n  formatVolume(volume: number): string {\n    if (volume >= 1000000) {\n      return `${(volume / 1000000).toFixed(1)}M`;\n    } else if (volume >= 1000) {\n      return `${(volume / 1000).toFixed(0)}K`;\n    }\n    return volume.toString();\n  }\n\n  formatTime(timestamp: string): string {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('en-US', { \n      hour12: false, \n      hour: '2-digit', \n      minute: '2-digit', \n      second: '2-digit' \n    });\n  }\n\n  getPriceChangeClass(change: number): string {\n    if (change > 0) return 'positive';\n    if (change < 0) return 'negative';\n    return 'neutral';\n  }\n\n  getYieldChangeClass(change: number): string {\n    if (change > 0) return 'negative'; // Higher yield is negative for bond prices\n    if (change < 0) return 'positive'; // Lower yield is positive for bond prices\n    return 'neutral';\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}